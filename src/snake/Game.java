/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package snake;

import java.awt.Color;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author alu53788313f
 */
public class Game extends javax.swing.JFrame {

    public static boolean gameStarted;
    private Color c;
//if headOrBodyColor is true we wont to change the Snake Head's Color , and if is false wanna change the Snake Body's Color
    private boolean headOrBodyColor;
    public static boolean rainbowColor;
    public static boolean rainbowBackgroundColor;
    public static boolean epilepsiaMode;

    /**
     * Creates new form Game// TODO add your handling code here:
     */
    public Game() {
        initComponents();
        board.setScore(scoreBoard);
        board.setParentFrame(this);
        gameStarted = false;
        c = null;
        headOrBodyColor = false;
        rainbowColor = false;
        rainbowBackgroundColor = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        board1 = new snake.Board();
        board = new snake.Board();
        scoreBoard = new snake.ScoreBoard();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuInitGame = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemChangeDifficulty = new javax.swing.JMenuItem();
        jMenuChangeRainbowColor = new javax.swing.JMenu();
        jMenuItemSelectHeadColor = new javax.swing.JMenuItem();
        jMenuItemSelectColorForBody = new javax.swing.JMenuItem();
        jMenuItemRainbow = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSelectBackgroundColor = new javax.swing.JMenuItem();
        jMenuItemBackgroundRainbowColor = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItemEpilepsiaTime = new javax.swing.JMenuItem();

        javax.swing.GroupLayout board1Layout = new javax.swing.GroupLayout(board1);
        board1.setLayout(board1Layout);
        board1Layout.setHorizontalGroup(
            board1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        board1Layout.setVerticalGroup(
            board1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        board.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout boardLayout = new javax.swing.GroupLayout(board);
        board.setLayout(boardLayout);
        boardLayout.setHorizontalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        boardLayout.setVerticalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 293, Short.MAX_VALUE)
        );

        getContentPane().add(board, java.awt.BorderLayout.CENTER);
        getContentPane().add(scoreBoard, java.awt.BorderLayout.PAGE_END);

        jMenuFile.setText("File");

        jMenuInitGame.setText("Init Game");
        jMenuInitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuInitGameActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuInitGame);

        jMenuBar1.add(jMenuFile);

        jMenuEdit.setText("Edit");
        jMenuEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuEditMouseClicked(evt);
            }
        });
        jMenuEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEditActionPerformed(evt);
            }
        });

        jMenuItemChangeDifficulty.setText("Change Difficulty");
        jMenuItemChangeDifficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChangeDifficultyActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemChangeDifficulty);

        jMenuChangeRainbowColor.setText("Change Snake Color");

        jMenuItemSelectHeadColor.setText("Select Head Color");
        jMenuItemSelectHeadColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelectHeadColorActionPerformed(evt);
            }
        });
        jMenuChangeRainbowColor.add(jMenuItemSelectHeadColor);

        jMenuItemSelectColorForBody.setText("Select Body Color");
        jMenuItemSelectColorForBody.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelectColorForBodyActionPerformed(evt);
            }
        });
        jMenuChangeRainbowColor.add(jMenuItemSelectColorForBody);

        jMenuItemRainbow.setText("Snake Rainbow Color ");
        jMenuItemRainbow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRainbowActionPerformed(evt);
            }
        });
        jMenuChangeRainbowColor.add(jMenuItemRainbow);

        jMenuEdit.add(jMenuChangeRainbowColor);

        jMenu1.setText("Change Background Color");

        jMenuItemSelectBackgroundColor.setText("Select Background Color");
        jMenuItemSelectBackgroundColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelectBackgroundColorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSelectBackgroundColor);

        jMenuItemBackgroundRainbowColor.setText("Background Rainbow Color");
        jMenuItemBackgroundRainbowColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBackgroundRainbowColorActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemBackgroundRainbowColor);

        jMenu2.setText("Warning");

        jMenu3.setText("PLS DONT");

        jMenu4.setText("NOT MY FAULT");

        jMenuItemEpilepsiaTime.setText("EpilepsiaMode");
        jMenuItemEpilepsiaTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEpilepsiaTimeActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItemEpilepsiaTime);

        jMenu3.add(jMenu4);

        jMenu2.add(jMenu3);

        jMenu1.add(jMenu2);

        jMenuEdit.add(jMenu1);

        jMenuBar1.add(jMenuEdit);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuInitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuInitGameActionPerformed

        resetDifficulty();
        gameStarted = true;
        changeDifficulty();
        board.initGame();

    }//GEN-LAST:event_jMenuInitGameActionPerformed

    private void jMenuItemChangeDifficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChangeDifficultyActionPerformed

        resetDifficulty();
        board.getTimer().stop();
        changeDifficulty();
        board.initGame();

    }//GEN-LAST:event_jMenuItemChangeDifficultyActionPerformed

    private void jMenuEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEditActionPerformed

    }//GEN-LAST:event_jMenuEditActionPerformed

    private void jMenuEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEditMouseClicked

    }//GEN-LAST:event_jMenuEditMouseClicked

    private void jMenuItemSelectColorForBodyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelectColorForBodyActionPerformed

        Color newColor = JColorChooser.showDialog(null, "Choose a color", c);
        board.changeColorSnake(newColor, false);

    }//GEN-LAST:event_jMenuItemSelectColorForBodyActionPerformed

    private void jMenuItemSelectHeadColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelectHeadColorActionPerformed
        // TODO add your handling code here:
        Color newColor = JColorChooser.showDialog(null, "Choose a color", c);
        board.changeColorSnake(newColor, true);
    }//GEN-LAST:event_jMenuItemSelectHeadColorActionPerformed

    private void jMenuItemRainbowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRainbowActionPerformed
        rainbowColor = true;
    }//GEN-LAST:event_jMenuItemRainbowActionPerformed

    private void jMenuItemSelectBackgroundColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelectBackgroundColorActionPerformed
        // TODO add your handling code here:
        Color newColor = JColorChooser.showDialog(null, "Choose a color", c);
        board.setBackground(newColor);
        rainbowBackgroundColor = false;
    }//GEN-LAST:event_jMenuItemSelectBackgroundColorActionPerformed

    private void jMenuItemBackgroundRainbowColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBackgroundRainbowColorActionPerformed
        // TODO add your handling code here:
        rainbowBackgroundColor = true;
    }//GEN-LAST:event_jMenuItemBackgroundRainbowColorActionPerformed

    private void jMenuItemEpilepsiaTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEpilepsiaTimeActionPerformed
        // TODO add your handling code here:

        if (JOptionPane.showConfirmDialog(null, "Are You sure???", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (JOptionPane.showConfirmDialog(null, "Please dont do it if you have some health problem", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (JOptionPane.showConfirmDialog(null, "ARE YOU RETARD OR SOMETHING ?????????????????", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    rainbowColor = true;
                    epilepsiaMode = true;
                } else {
                    System.exit(0);
                }
            } else {
                System.exit(0);
            }
        } else {
            System.exit(0);
        }


    }//GEN-LAST:event_jMenuItemEpilepsiaTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    private void changeDifficulty() {
        JFrame frame = new JFrame();
        if (gameStarted) {

            String[] options = new String[3];
            options[0] = new String("Hard");
            options[1] = new String("Medium");
            options[2] = new String("Easy");
            int gameMode = JOptionPane.showOptionDialog(frame.getContentPane(), "Select The Game Difficulty", "GameMode", 0, JOptionPane.INFORMATION_MESSAGE, null, options, null);
            switch (gameMode) {
                case 0:
                    board.hardMode = true;
                    break;
                case 1:
                    board.mediumMode = true;
                    break;
                case 2:
                    board.easyMode = true;
                    break;
                default:
                    board.mediumMode = true;
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(frame, "Please initialize first the game ", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void resetDifficulty() {
        board.hardMode = false;
        board.mediumMode = false;
        board.easyMode = false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private snake.Board board;
    private snake.Board board1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuChangeRainbowColor;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuInitGame;
    private javax.swing.JMenuItem jMenuItemBackgroundRainbowColor;
    private javax.swing.JMenuItem jMenuItemChangeDifficulty;
    private javax.swing.JMenuItem jMenuItemEpilepsiaTime;
    private javax.swing.JMenuItem jMenuItemRainbow;
    private javax.swing.JMenuItem jMenuItemSelectBackgroundColor;
    private javax.swing.JMenuItem jMenuItemSelectColorForBody;
    private javax.swing.JMenuItem jMenuItemSelectHeadColor;
    private snake.ScoreBoard scoreBoard;
    // End of variables declaration//GEN-END:variables
}
